q
testcases/short1.rep
r testcases/short1.rep
-t  testcases/short1.rep
t testcases/short1.rep
q
r testcases/short1.rep
r -t testcases/short1.rep
b
bt
start
c
info local
q
start
c
q
r -t testcases/short1.rep
p prev->next
info locals
p prev
p *prev
q
r -t testcases/short1.rep
b
bt
start
q
r -t testcases/short1.rep
bt
q
r -t testcases/short1.rep
b
bt
start
c
q
r -t testcases/short1.rep
p itr
p itr->next
p *itr->next
p *itr
p *prev
p prev->next
p *prev->next
q
start
c
r -t testcases/short1.rep
start
n
n
n
n
n
n
n
n
n
n
n
n
n
b grind.c:34
start
c
p locals
info locals
info allocs
p allocs
p allocs[0]
p *allocs[0]
p *allocs[1]
n
p itr
p *itr
p *itr->index
p itr->index
p parse->index
p parser->index
p prev
p *prev
n
n
p *itr
n
n
n
n
p freed
p bool freed
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
info locals
p &itr
p &itr
p itr
n
n
n
n
n
n
c
c
c
c
c
q
r -t testcases/short1.rep
q
r -t testcases/short.1rep
r -t testcases/short1.rep
start
n
n
b grind
c
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
b 31
c
n
p parser->index
p itr
p *itr
p allocs
n
n
n
n
info prev
p prev
p *prev
p allocs[hash(parser->index)]
p *allocs[hash(parser->index)]
p itr->next
p *itr->next
n
n
p *allocs[hash(parser->index)]
p allocs[hash(parser->index)]
p hash(parser->index)
p itr
p allocas
p allocs
start
p parser->index
n
n
n
n
n
n
n
n
nn
n
n
n
n
p parser->index
n
n
p parser->index
n
n
n
n
n
p parser->index
n
n
n
n
n
c
p parser->index
c
p parser->index
n
q
